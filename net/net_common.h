
#ifndef _TA_NET_COMMON_H_
#define _TA_NET_COMMON_H_ 1

#include <basictypes.h>

#if defined(_TB_FANTASY)
#include "G:\projects\tieba\tbFantasy\tbFantasy\shield\TaShield.h"
#else
//Ascii
enum TaShield_AsciiText{
	TA_BASE_A_TEXT_SHIELD_MSGBOX_NAME		= 0,
	TA_BASE_A_TEXT_SHIELD_SETWT_NAME		,
	TA_BASE_A_TEXT_4BPA_LINE				,
	TA_BASE_A_TEXT_4BPA_SETCOOKIE_FLAGS		,
	TA_BASE_A_TEXT_4BPA_PATH_FLAGS			,
	TA_BASE_A_TEXT_4BPA_EXPIRES_FLAGS		,
	//TA_BASE_A_TEXT_4BPA_LEU					,
	//TA_BASE_A_TEXT_4BPA_LEP					,
	TA_BASE_A_TEXT_4BPA_LOGIN_ERROR_FLAFS	,
	/*TA_BASE_A_TEXT_4BPA_LOGIN_HEADER		,
	TA_BASE_A_TEXT_4BPA_CHECK_HEADER		,
	TA_BASE_A_TEXT_4BPA_CHECK_SUCCEED		,
	TA_BASE_A_TEXT_4BPA_CHECK_UPDATE		,
	TA_BASE_A_TEXT_4BPA_CHECK_SAY			,
	TA_BASE_A_TEXT_4BPA_CHECK_POWER			,*/
	TA_BASE_A_TEXT_4BPA_SIGMA_SERVER		,
	TA_BASE_A_TEXT_NET_TCP					,
	//TA_BASE_A_TEXT_4BPA_CHECK_URL			,
	TA_BASE_A_TEXT_SHIELD_CONSOLE_FORMAT	,
	/*TA_BASE_A_TEXT_REG_FORMAT_JMP			,
	TA_BASE_A_TEXT_REG_FORMAT_SUCCEED		,
	TA_BASE_A_TEXT_REG_FORMAT_VCODE			,
	TA_BASE_A_TEXT_REG_JMP					,
	TA_BASE_A_TEXT_REG_RE					,
	TA_BASE_A_TEXT_REG_FORMAT_FAIL			,
	TA_BASE_A_TEXT_REG_FORMAT_FAIL_CODE		,
	TA_BASE_A_TEXT_REG_FORMAT_FAIL_UNKNOW	,
	TA_BASE_A_TEXT_REG_FORMAT_FAIL_NOINFO	,
	TA_BASE_A_TEXT_REG_FORMAT_TMPTEXT		,
	TA_BASE_A_TEXT_REG_POST_HEADER			,
	TA_BASE_A_TEXT_REG_POST_DATA1			,
	TA_BASE_A_TEXT_REG_POST_DATA2			,
	TA_BASE_A_TEXT_REG_POST_DATA2_VCODE		,
	TA_BASE_A_TEXT_REG_SUCCEED_DATA			,*/
	TA_BASE_A_TEXT_T_BAIDU_SERVER			,
	TA_BASE_A_TEXT_MAIN_FIRSTRUN			,
	TA_BASE_A_TEXT_MAIN_TITLE				,
	TA_BASE_A_TEXT_MAIN_PRODUCT_NAME		,
	TA_BASE_A_TEXT_MAIN_IM_HERE				,
	TA_BASE_A_TEXT_APP_ID					,
	TA_BASE_A_TEXT_APP_KEY					,
	TA_BASE_A_TEXT_MOBILE_UA				,
	TA_BASE_A_TEXT_SIGMA_URL				,
	TA_BASE_A_TEXT_SIGMA_SESSIONNAME		,
	TA_BASE_A_TEXT_SIGMA_UA					,
	TA_BASE_A_TEXT_SIGMA_CLIENT_URL			,
	TA_BASE_A_TEXT_TBCLIENT_KEY				,
	TA_BASE_A_TEXT_TBCLIENT_SIGNSESSION		,
	TA_BASE_A_TEXT_TING_KEY					,
	TA_BASE_A_TEXT_TING_SIGNSESSION			,
	TA_BASE_A_TEXT_SIGMA_SIGN_F1			,
	TA_BASE_A_TEXT_SIGMA_SIGN_F2			,
	TA_BASE_A_TEXT_SIGMA_SIGN_TOOL			,
	TA_BASE_A_TEXT_SIGMA_SIGNSESSION		,
	TA_BASE_A_TEXT_CLIENT_NAME				,
	TA_BASE_A_TEXT_CLIENT_VERSION			,
	TA_BASE_A_TEXT_CLIENT_TOOLKEY
};

const char* GetBaseTextA(uint32 uATextId);

#define TAGETTEXTA(id)	GetBaseTextA(id)
#endif

#endif